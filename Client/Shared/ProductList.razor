@inject IProductService productService
<h3>ProductList</h3>

@if (productService.products == null || productService.products.Count == 0)
{
    <span>Loading Products ...</span>
}
else
{
    <ul class="list-unstyled">
        @foreach (var product in productService.products)
        {
            <li class="media my-3">
                <div class="media-image-wrapper mr-2">
                    <a href="/product/@product.Id">
                        <img src="@product.ImageUrl" class="media-img" alt="@product.Title" />
                    </a>
                </div>
                <div class="media-body">
                    <a href="/product/@product.Id">
                        <h4 class="mb-0"> @product.Title</h4>
                    </a>
                    <p>@product.Description</p>
                    <h5 class="price">@product.Price</h5>
                </div>
            </li>
        }
    </ul>
}

@code {
    //private static List<Product> products = new List<Product>();

    protected override async Task OnInitializedAsync()
    {
        await productService.GetProducts();
        //var result = await Http.GetFromJsonAsync<ServiceResponse<List<Product>>>("api/product");
        //if(result != null && result.Data != null)
        //{
        //    products = result.Data;
        //}
    }

}
